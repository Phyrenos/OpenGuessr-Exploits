import requests
from time import sleep
import json

def read_config_file(file_path):
    with open(file_path, 'r') as file:
        config = json.load(file)
    return config

config = read_config_file('config.json')

class XPFarm:
    def __init__(self):
        self.TargetXP = int(input("Enter the target XP: "))
        self.Accountid = config['account_id']
        self.BearerToken = config['bearer_token']
        self.CurrentXP = 0 
        self.Increment = 10000 # HAS TO BE 10000 OTHERWISE YOU WILL GET BLOCKED
        self.TimePerIncrement = 15 # To avoid ratelimiting
        self.UpdateCurrentXP()
        self.FarmXP()

    def TimeUtils(self):
        num_increments = (self.TargetXP - self.CurrentXP) // self.Increment + 1
        total_time = num_increments * self.TimePerIncrement
        total_time_mins = total_time / 60
        return num_increments, total_time, total_time_mins
    
    def UpdateCurrentXP(self):
        self.CurrentXP = requests.get(f'https://accounts.openguessr.com/accounts/profile/{self.Accountid}').json()['experience']
        print(f"Current XP: {self.CurrentXP}")
    
    def FarmXP(self):
        num_increments, total_time, total_time_mins = self.TimeUtils()

        print(f"Total time to get to {self.TargetXP} : {total_time} seconds / {round(total_time_mins)} minutes / {round(total_time_mins / 60)} hours")
        print(f"Looping {num_increments} times to get to {self.TargetXP}")

        for x in range(0, num_increments):
            response = requests.put('https://accounts.openguessr.com/accounts/update/experience', headers={"Authorization": self.BearerToken}, json={'id': self.Accountid,'experience': self.CurrentXP})
            if response.status_code == 200:
                print(f"Updated XP to {str(self.CurrentXP)} / {self.TargetXP} Only {str(num_increments - x)} increments left")
            else:
                print(f"Failed to update XP {str(response.status_code)} : {response.json()['error']}")
            self.CurrentXP += self.Increment
            sleep(self.TimePerIncrement)
XPFarm()
